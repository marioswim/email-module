<?php

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path 
 *   Which path of the site we're using to display help
 * @param arg 
 *   Array that holds the current path as returned from arg() function
 */
function EmailModule_help($path, $arg) {
  switch ($path) {
    case "admin/help#erintModule":
      return '<p>' . t("Block to send a email to contact person of a product or research group.") . '</p>';
      break;
  }
} 
function EmailModule_block_info()
{
	 $blocks['email'] = array(
    // The name that will appear in the block list.
    'info' => t('Email to contact person of product or research group.'),
    // Default setting.
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  return $blocks;
}
function EmailModule_block_view($delta="")
{
	 $block['subject'] = "";
	 //$block['content'] = theme("EmailModule_block",array("email" => get_email_responsible()));
	 $block['content'] = drupal_get_form("responsible_email_form");

	
	 return $block;
}

function get_email_responsible()
{
	return menu_get_object()->field_email["und"][0]["value"];
}

function responsible_email_form($form)
{
	
	$title=t('I have read and acept').' <b><a href="">'.t('the privacy polity').'</a></b>';

	$form["#id"]="responsible-email-form";
	$form["name"]=array(
		"#title" => t("Name"),
		'#required' => TRUE,
		'#type' => 'textfield',
		'#weight' => 0,
		"#attributes" =>array('placeholder' => t("Name") ),
		);
	$form["email"]=array(
		"#title" => "Email",
		'#type' => 'textfield',
		'#weight' => 1,
		'#required' => TRUE,
		"#attributes" =>array('placeholder' => "Email" ),
		);
	$form["telephone"]=array(
		"#title" => t("Telephone"),
		'#type' => 'textfield',
		'#weight' => 2,
		'#required' => TRUE,
		"#attributes" =>array('placeholder' => t("Telephone") ),
		);
	$form["subject"]=array(
		"#title" => t("Subject"),
		'#type' => 'textfield',
		'#weight' => 3,
		'#required' => TRUE,
		"#attributes" =>array('placeholder' => t("Subject") ),
		);
	$form["message"]=array(
		"#title" => t("Message"),
		'#type' => 'textarea',
		"#rows" => 6,
		'#weight' => 4,
		'#required' => TRUE,
		"#attributes" =>array('placeholder' => t("Message") ),
		);
	/*$form["polity"]=array(
		'#type' => 'checkbox',
		"#title" => $title,
		'#required' => TRUE,
		'#weight' => 5,
		);*/
	/*$form["submit_button"]=array(
		'#type' => 'submit',
		'#value' => t("Send"),
		'#weight' => 6,
		
		);*/
	$form['actions'] = array('#type' => 'actions');
	  $form['actions']['submit'] = array('#type' => 'submit',
	    '#value' => t('Send'),
	  );
	return $form;
}
function responsible_email_form_validate($form,&$form_state)
{
	if(preg_match_all("/\d/",$form_state["values"]["name"]))
	{
		form_set_error("name",t("Invalid name"));
	}
	if(!preg_match_all("/^([a-z0-9_\.-]+)@([\da-z\.-]+)\.([a-z\.]{2,6})$/", $form_state["values"]["email"]))
	{
		form_set_error("email",t("Invalid email"));
	}
	
	
	if(preg_match_all('/([a-z]+)/',$form_state["values"]["telephone"]))
	{
		form_set_error('telephone', t('The telephone must be a number.'));
	}
	
}
function responsible_email_form_submit($form,&$form_state)
{
	EmailModule_mail_send($form_state["values"]);
}
function EmailModule_mail($key, &$message, $params) 
{
	switch ($key) {
	    // Send a simple message from the contact form.
	    case 'contact_message':
	      $message['subject'] = '[MarketPlace]: '.$params["subject"];
	      $message['body'][] = check_plain($params['message']);
	      break;
	  }
}
function EmailModule_mail_send($form_values)
{
	  // All system mails need to specify the module and template key (mirrored from
  // hook_mail()) that the message they want to send comes from.
  $module = 'EmailModule';
  $key = 'contact_message';

  // Specify 'to' and 'from' addresses.
  $to = get_email_responsible();
  $from = variable_get('site_mail', '');
  $params = $form_values;
  $language = language_default();
  $send = TRUE;
  $result = drupal_mail($module, $key, $to, $language, $params, $from, $send);
  if ($result['result'] == TRUE) 
  {
    drupal_set_message(t('Your message has been sent.'));
  }
  else 
  {
    drupal_set_message(t('There was a problem sending your message and it was not sent.'), 'error');
  }

}
